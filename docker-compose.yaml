version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: nihongo-it-postgres
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nihongo_network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: nihongo-it-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - nihongo_network
    restart: unless-stopped

  # Chỉ comment lại service này, khi nào cần chạy trực tiếp từ Docker thì bỏ comment
  # spring-app:
  #   build:
  #     context: ./nihongo-it-backend
  #     dockerfile: Dockerfile
  #   container_name: nihongo-it-backend
  #   environment:
  #     SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
  #     SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
  #     SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
  #     JWT_SECRET: ${JWT_SECRET}
  #     OPENAI_API_KEY: ${OPENAI_API_KEY}
  #     MAIL_USERNAME: ${MAIL_USERNAME}
  #     MAIL_PASSWORD: ${MAIL_PASSWORD}
  #     AI_SERVICE_URL: http://ai-service:8082
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - postgres
  #     - ai-service
  #   networks:
  #     - nihongo_network

  # Chỉ comment lại service này, khi nào cần chạy trực tiếp từ Docker thì bỏ comment
  # ai-service:
  #   build:
  #     context: ./ai-service
  #     dockerfile: Dockerfile
  #   container_name: nihongo-it-ai-service
  #   environment:
  #     OPENAI_API_KEY: ${OPENAI_API_KEY}
  #   ports:
  #     - "8082:8082"
  #   networks:
  #     - nihongo_network
  #   restart: unless-stopped

  # Chỉ comment lại service này, khi nào cần chạy trực tiếp từ Docker thì bỏ comment
  # python-service:
  #   build:
  #     context: ./nihongo-it-python
  #     dockerfile: Dockerfile
  #   container_name: nihongo-it-python
  #   environment:
  #     OPENAI_API_KEY: ${OPENAI_API_KEY}
  #   ports:
  #     - "8000:8000"
  #   networks:
  #     - nihongo_network

volumes:
  postgres_data:
  pgadmin_data:

networks:
  nihongo_network:
    driver: bridge
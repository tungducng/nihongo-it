spring:
  main:
    banner-mode: "console"
    output:
      ansi:
        enabled: always
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 1014067195013-47hr00d1f2gork8voqavccu3nvpcn25m.apps.googleusercontent.com
            client-secret: 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
            scope: email,profile

# Keep existing configurations... 
  application:
    name: nihongo-it-backend
  profiles:
    active: dev
  datasource:
    url: jdbc:postgresql://localhost:5432/NihongoIT
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true
  sql:
    init:
      mode: never
  ai:
    openai:
      api-key: ${OPENAI_API_KEY}
      audio:
        speech:
          model: gpt-4o-mini-tts
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  # Mail configuration for notifications using Gmail
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME:no.reply.nihongo.it@gmail.com}
    password: ${MAIL_PASSWORD:ngisopnkietkuvfx}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
        debug: true
  # Spring Cloud Configuration
  cloud:
    config:
      enabled: false  # Tắt Config Server tạm thời, chỉ bật khi có Config Server
    discovery:
      enabled: true   # Bật service discovery
server:
  port: 8080

# Eureka Configuration
eureka:
  client:
    enabled: ${EUREKA_ENABLED:false}  # Chỉ kích hoạt khi EUREKA_ENABLED=true
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_SERVICE_URL:http://localhost:8761/eureka/}
  instance:
    prefer-ip-address: true
    hostname: ${HOSTNAME:localhost}

# JWT Configuration
jwt:
  secret: ${JWT_SECRET}
  expiration: 2592000000  # 30 days for language learning apps

# App custom properties
app:
  frontend-url: http://localhost:5173
  ai-service-url: ${AI_SERVICE_URL:http://localhost:8082}

# Swagger/OpenAPI
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
  

# Cấu hình Feign Client
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
      ai-service:
        url: ${app.ai-service-url}
        loggerLevel: full

# Cấu hình Resilience4j (Circuit Breaker)
resilience4j:
  circuitbreaker:
    instances:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowType: COUNT_BASED
        minimumNumberOfCalls: 5
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
  retry:
    instances:
      default:
        maxAttempts: 3
        waitDuration: 500ms
  

server:
  port: 8080

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        # User Service (Auth Service) Route
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/v1/users/**, /api/v1/auth/**, /api/v1/roles/**, /ai-service-api/**
          filters:
            - StripPrefix=0  # Không rewrite path, chuyển tiếp nguyên đường dẫn
            # - name: CircuitBreaker
            #   args:
            #     name: userServiceCircuitBreaker
            #     fallbackUri: forward:/fallback/user

        # - id: learning-service
        #   uri: lb://learning-service
        #   predicates:
        #     - Path=/api/learning/**
        #   filters:
        #     - RewritePath=/api/learning/(?<segment>.*), /$\{segment}
        #     # - name: CircuitBreaker
        #     #   args:
        #     #     name: learningServiceCircuitBreaker
        #     #     fallbackUri: forward:/fallback/learning

        - id: ai-service
          uri: lb://ai-service
          predicates:
            - Path=/ai-service-api/**
          filters:
            - StripPrefix=0  # Không rewrite path, chuyển tiếp nguyên đường dẫn
            # - name: CircuitBreaker
            #   args:
            #     name: aiServiceCircuitBreaker
            #     fallbackUri: forward:/fallback/ai

        # - id: notification-service
        #   uri: lb://notification-service
        #   predicates:
        #     - Path=/api/notification/**
        #   filters:
        #     - RewritePath=/api/notification/(?<segment>.*), /$\{segment}
        #     # - name: CircuitBreaker
        #     #   args:
        #     #     name: notificationServiceCircuitBreaker
        #     #     fallbackUri: forward:/fallback/notification

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVICE_URL:http://localhost:8761/eureka/}
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,gateway
  endpoint:
    gateway:
      enabled: true
    health:
      show-details: always

springdoc:
  swagger-ui:
    path: /api-docs
  api-docs:
    enabled: true
    path: /v3/api-docs

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:ThisIsAVerySecureSecretKeyForJWTGenerationInDevelopment}
  expirationMs: ${JWT_EXPIRATION_MS:86400000}
  refreshExpirationMs: ${JWT_REFRESH_EXPIRATION_MS:604800000}

# CORS Configuration
#cors:
#  allowed-origins: ${CORS_ALLOWED_ORIGINS:*}
#  allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
#  allowed-headers: ${CORS_ALLOWED_HEADERS:*}
#  max-age: ${CORS_MAX_AGE:3600}

logging:
  level:
    root: INFO
    org.springframework.cloud.gateway: DEBUG
    org.springframework.web: INFO
    com.example.apigateway: DEBUG 